--- MusicInfoSCR.pm	2005-12-19 08:46:00.000000000 +0100
+++ MusicInfoSCR.pm.new	2006-01-14 16:37:29.900889888 +0100
@@ -44,6 +44,8 @@
 use vars qw($VERSION);
 $VERSION = substr( q$Revision$, 10 );
 
+my %customitems = ();
+
 sub getDisplayName() {
 	return 'PLUGIN_SCREENSAVER_MUSICINFO';
 }
@@ -267,6 +269,19 @@
 	$formatStrings{'(X_OF_Y)'} = '(X_OF_Y)';
 	$formatStrings{'PROGRESSBAR'} = 'PROGRESSBAR';
 
+	no strict 'refs';
+	my @plugins = Slim::Buttons::Plugins::enabledPlugins();
+	for my $plugin (@plugins) {
+		if(UNIVERSAL::can("Plugins::$plugin","getMusicInfoSCRCustomItems") && UNIVERSAL::can("Plugins::$plugin","getMusicInfoSCRCustomItem")) {
+			$::d_plugins && Slim::Utils::Misc::msg("MusicInfoSCR: Getting items for: $plugin\n");
+			my $items = eval { &{"Plugins::${plugin}::getMusicInfoSCRCustomItems"}() };
+			for my $item (keys %$items) {
+				$customitems{$item} = "Plugins::${plugin}::getMusicInfoSCRCustomItem";
+				$formatStrings{$item} = $items->{$item};
+			}
+		}
+	}
+
 	my %setupGroup = (
 		PrefOrder => [
 			'plugin_musicinfo_lineA', 'plugin_musicinfo_overlayA',
@@ -351,6 +366,8 @@
 sub setScreensaverMusicInfoMode() {
 	my $client = shift;
 	
+	clearCustomItemCache($client);
+	
 	# initialize settings if they don't exist yet
 	if (not ($client->prefGet('plugin_musicinfo_lineA') || $client->prefGet('plugin_musicinfo_overlayA') ||
 			$client->prefGet('plugin_musicinfo_lineB') || $client->prefGet('plugin_musicinfo_overlayB') ||
@@ -551,6 +568,8 @@
 #			$::d_plugins && Slim::Utils::Misc::msg("MusicInfoSCR: '$formattedString'\n");
 		}
 		
+		$formattedString = getCustomItem($client,$formattedString);
+			
 		# if ARTIST/ALBUM etc. is empty, replace them by some "Now playing..."
 		if ($albumOrArtist) {
 			my $tmpFormattedString = $formattedString;
@@ -652,6 +671,35 @@
 	return ($displayCache{$client}->{'icons'}, $line . ("\x00" x ($displayCache{$client}->{'width'})));
 }
 
+sub getCustomItem()
+{
+	my $client = shift;
+	my $formattedString = shift;
+
+	no strict 'refs';
+
+	for my $item (keys %customitems) {
+		my $method = %customitems->{$item};
+		if ($formattedString =~ /$item/) {
+			$::d_plugins && Slim::Utils::Misc::msg("MusicInfoSCR ($client): Getting custom info for $item from: $method\n");
+			$formattedString = eval { &{"${method}"}($client,$formattedString) };
+		}
+	}
+	return $formattedString;
+}
+sub clearCustomItemCache()
+{
+	my $client = shift;
+
+	no strict 'refs';
+
+	for my $item (keys %customitems) {
+		$displayCache{$client}->{$item} = {
+			'songkey' => '',
+			'formattedString' => ''
+		};
+	}
+}
 
 sub strings { return q^
 PLUGIN_SCREENSAVER_MUSICINFO
